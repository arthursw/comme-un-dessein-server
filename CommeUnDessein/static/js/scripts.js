// Generated by CoffeeScript 1.10.0
(function() {
  var previousState, state, userIsKnown;

  state = 'Email';

  previousState = 'Start';

  userIsKnown = false;

  $.ajaxSetup({
    beforeSend: function(xhr, settings) {
      var getCookie;
      getCookie = function(name) {
        var cookie, cookieValue, cookies, i;
        cookieValue = null;
        if (document.cookie && document.cookie !== '') {
          cookies = document.cookie.split(';');
          i = 0;
          while (i < cookies.length) {
            cookie = jQuery.trim(cookies[i]);
            if (cookie.substring(0, name.length + 1) === name + '=') {
              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
              break;
            }
            i++;
          }
        }
        return cookieValue;
      };
      if (!(/^http:.*/.test(settings.url) || /^https:.*/.test(settings.url))) {
        xhr.setRequestHeader('X-CSRFToken', getCookie('csrftoken'));
      }
    }
  });

  $(document).ready(function() {
    var backJ, deferredFocus, emailJ, errorJ, errors, labelJ, loadIconJ, maskJ, passwordGroupJ, passwordJ, primaryButtonJ, setState, signinButtonJ, signinLabelJ, signupButtonJ, signupLabelJ, submitEnter, titleJ, usernameJ, validateEmail;
    errors = $('.errorlist').text();
    console.log(errors);
    if (window.location.pathname === "/accounts/signup/") {
      window.location = "/connexion/";
    }
    signupLabelJ = $('#cd-signup-label');
    signinLabelJ = $('#cd-signin-label');
    signupButtonJ = $('#cd-signup');
    signinButtonJ = $('#cd-signin');
    primaryButtonJ = $('#cd-submit');
    loadIconJ = primaryButtonJ.find('.glyphicon');
    loadIconJ.hide();
    loadIconJ.removeClass('cd-hidden');
    emailJ = $('#cd-email');
    usernameJ = $('#cd-username');
    passwordJ = $('#cd-password');
    maskJ = $('#cd-mask');
    passwordGroupJ = $('#cd-password-group');
    labelJ = $('#cd-label span');
    titleJ = $('#cd-title span');
    backJ = $('#cd-cancel');
    errorJ = $('#cd-error');
    submitEnter = function(event) {
      switch (event.keyCode) {
        case 13:
          primaryButtonJ.click();
      }
    };
    deferredFocus = function(divToFocusJ) {
      setTimeout((function() {
        return divToFocusJ.focus();
      }), 500);
    };
    validateEmail = function(email) {
      var re;
      re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
      return re.test(email);
    };
    setState = function(newState) {
      previousState = state;
      state = newState;
    };
    emailJ.focus();
    emailJ.keyup(submitEnter);
    passwordJ.keyup(submitEnter);
    usernameJ.keyup(submitEnter);
    maskJ.click(function(event) {
      var masked;
      masked = passwordJ.attr('type') === 'password';
      if (masked) {
        passwordJ.attr('type', 'text');
        maskJ.text('Masquer');
      } else {
        passwordJ.attr('type', 'password');
        maskJ.text('Afficher');
      }
    });
    if (window.location.hash === '#wrongPassword') {
      setState('Password');
      userIsKnown = true;
      emailJ.hide();
      backJ.show();
      labelJ.text("Mot de passe :");
      passwordGroupJ.removeClass('cd-hidden').show();
      errorJ.removeClass('cd-hidden').show().find('span').text("L’adresse e-mail ou le mot de passe sont incorrects.");
      deferredFocus(passwordJ);
    }
    primaryButtonJ.click(function(event) {
      var email, password, username;
      if (state === 'Start') {
        console.log('continue');
      } else if (state === 'Email') {
        email = emailJ.val();
        if (email.length <= 0) {
          console.error('This email adress is empty');
          errorJ.removeClass('cd-hidden').show().find('span').text("Veuillez entrer une adresse email ou un nom d'utilisateur.");
          emailJ.select();
          deferredFocus(emailJ);
          return;
        }
        errorJ.hide();
        loadIconJ.show();
        $.ajax({
          method: "POST",
          url: "ajaxCall/",
          data: {
            data: JSON.stringify({
              "function": 'isEmailKnown',
              args: {
                email: email
              }
            })
          }
        }).done(function(result) {
          var username;
          loadIconJ.hide();
          if (result.message != null) {
            console.log(result.message);
          }
          email = emailJ.val();
          userIsKnown = result.emailIsKnown || result.usernameIsKnown;
          if (!userIsKnown) {
            if (!validateEmail(email)) {
              errorJ.removeClass('cd-hidden').show().find('span').text("Cette adresse email n'est pas valide.");
              emailJ.select();
              deferredFocus(emailJ);
              return;
            }
          }
          emailJ.hide();
          backJ.show();
          if (!userIsKnown) {
            titleJ.text('Créer un compte');
            $('#id_login, #id_email').val(email);
            username = email.substr(0, email.indexOf('@'));
            if (result.emailShortNameIsKnown) {
              username += Math.random().toFixed(2).substring(2);
            }
            usernameJ.val(username);
            setState('AcceptEmails');
            labelJ.text("Vous devez accepter de recevoir des emails de Comme un Dessein pour continuer");
            deferredFocus(primaryButtonJ.focus());
          } else {
            titleJ.text('Se connecter');
            if (result.emailIsKnown) {
              $('#id_email, #id_login').val(email);
            } else if (result.usernameIsKnown) {
              $('#id_login').val(email);
            }
            setState('Password');
            labelJ.text("Mot de passe :");
            passwordGroupJ.removeClass('cd-hidden').show();
            maskJ.text('Afficher');
            passwordJ.attr('type', 'password');
            deferredFocus(passwordJ);
          }
        });
      } else if (state === 'AcceptEmails') {
        setState('Username');
        labelJ.text("Nom d'utilisateur :");
        usernameJ.removeClass('cd-hidden').show();
        deferredFocus(usernameJ);
      } else if (state === 'Username') {
        username = usernameJ.val();
        errorJ.hide();
        loadIconJ.show();
        $.ajax({
          method: "POST",
          url: "ajaxCall/",
          data: {
            data: JSON.stringify({
              "function": 'isUsernameKnown',
              args: {
                username: username
              }
            })
          }
        }).done(function(result) {
          loadIconJ.hide();
          if (result.message != null) {
            console.log(result.message);
          }
          if (result.usernameIsKnown) {
            console.error('The username is already taken');
            errorJ.removeClass('cd-hidden').show().find('span').text('Un utilisateur avec ce nom existe déjà.');
            usernameJ.select();
            deferredFocus(usernameJ);
          } else {
            setState('Password');
            labelJ.text("Mot de passe :");
            $('#id_username').val(usernameJ.val());
            usernameJ.hide();
            passwordJ.val(Math.random().toFixed(4).substring(2));
            maskJ.text('Masquer');
            passwordJ.attr('type', 'text');
            passwordGroupJ.removeClass('cd-hidden').show();
            deferredFocus(passwordJ);
          }
        });
      } else if (state === 'Password') {
        errorJ.hide();
        password = passwordJ.val();
        if (password.length <= 2) {
          console.error('The password is too short');
          errorJ.removeClass('cd-hidden').show().find('span').text('Le mot de passe est trop court.');
          passwordJ.select();
          deferredFocus(passwordJ);
          return;
        }
        $('#id_password, #id_password1').val(password);
        if (userIsKnown) {
          $('#submit-signin').click();
        } else {
          $('#submit-signup').click();
        }
      }
    });
    backJ.click(function(event) {
      errorJ.hide();
      if (state === 'Start') {
        window.location = '/';
      } else if (state === 'Email') {
        window.location = '/';
      } else if (state === 'Username' || state === 'AcceptEmails') {
        setState('Email');
        titleJ.text('Créer un compte ou se connecter');
        labelJ.text("Email ou nom d'utilisateur :");
        usernameJ.hide();
        passwordGroupJ.hide();
        emailJ.show();
        deferredFocus(emailJ);
      } else if (state === 'Password') {
        passwordGroupJ.hide();
        if (!userIsKnown) {
          setState('Username');
          labelJ.text("Nom d'utilisateur :");
          usernameJ.removeClass('cd-hidden').show();
          deferredFocus(usernameJ);
        } else {
          setState('Email');
          labelJ.text("Email ou nom d'utilisateur :");
          titleJ.text('Créer un compte ou se connecter');
          emailJ.show();
          deferredFocus(emailJ);
        }
      }
    });
  });

}).call(this);
